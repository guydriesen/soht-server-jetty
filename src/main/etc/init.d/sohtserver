#!/bin/sh

### BEGIN INIT INFO
# Provides:          ${service.name}
# Required-Start:    $local_fs $remote_fs $network
# Required-Stop:     $local_fs $remote_fs $network
# Should-Start:      $named
# Should-Stop:       $named
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Start SOHT server.
# Description:       Starts the Socket over HTTP Tunneling Server.
### END INIT INFO

PATH=/bin:/usr/bin:/sbin:/usr/sbin
DESC="SOHT server"
NAME=${service.name}


if [ `id -u` -ne 0 ]; then
	echo "You need root privileges to run this script"
	exit 1
fi

. /lib/lsb/init-functions

if [ -r /etc/default/rcS ]; then
	. /etc/default/rcS
fi

[ -f "/etc/default/$NAME" ] && . /etc/default/$NAME


# PID file
PIDFILE="/var/run/$NAME.pid"

# java runtime
JAVA=/usr/bin/java

# jar file
JAR="/usr/share/java/$NAME.jar"

# build the command line to execute
JAVA_CMD="$JAVA $JAVA_OPTS"
JAVA_CMD="$JAVA_CMD -jar $JAR"
JAVA_CMD="$JAVA_CMD $HOST:$PORT"


do_start()
{
	# Return
	#   0 if daemon has been started
	#   1 if daemon was already running
	#   2 if daemon could not be started

	start-stop-daemon --start --quiet --test \
		--user "$USER" \
		--pidfile "$PIDFILE" \
		--exec $JAVA > /dev/null \
		|| return 1

	start-stop-daemon --start --quiet --background \
		--user "$USER" \
		--chuid "$USER" \
		--group "$GROUP" \
		--pidfile "$PIDFILE" --make-pidfile \
		--exec $JAVA --startas "/bin/bash" -- -c "$JAVA_CMD" \
		|| return 2
}

do_stop()
{
	# Return
	#   0 if daemon has been stopped
	#   1 if daemon was already stopped
	#   2 if daemon could not be stopped
    #   other if a failure occurred

	start-stop-daemon --stop --quiet --retry=TERM/30/KILL/5 \
		--user "$USER" \
		--pidfile $PIDFILE --exec $JAVA 
	RETVAL="$?"
	[ "$RETVAL" = 2 ] && return 2

	# Remove pidfiles.
	rm -f $PIDFILE

	return "$RETVAL"
}


case "$1" in
	start)
		log_daemon_msg "Starting $DESC" "$NAME"
		do_start
		case "$?" in
			0|1) log_end_msg 0 ;;
			2) log_end_msg 1 ;;
		esac
		;;
	stop)
		log_daemon_msg "Stopping $DESC" "$NAME"
		do_stop
		case "$?" in
			0|1) log_end_msg 0 ;;
			2) log_end_msg 1 ;;
		esac
		;;
	*)
		echo "Usage: $0 {start|stop}"
		exit 3
		;;
esac

